package fernuni.propra.algorithm;

import fernuni.propra.file_processing.UserReadInputWriteOutputAAS;
import fernuni.propra.file_processing.UserReadInputWriteOutputException;
import fernuni.propra.internal_data_model.IRoom;

/**
 * Diese Klasse wird als API (Application Programming INteraface) verwendet. Das
 * bedeutet, dass diese Klasse als Bibliothek für andere Applikationen verwendet
 * werden kann.
 * 
 * Bitte achten Sie darauf, am bereits implementierten Rahmen (Klassenname,
 * Package, Methodensignaturen) KEINE Veränderungen vorzunehmen.
 * Selbstverständlich können und müssen Sie innerhalb der Methoden Änderungen
 * vornehmen
 */
public class Ausleuchtung implements IAusleuchtung {

	/**
	 * Überprüft die eingegebene Lösung auf Korrektheit
	 * @param xmlFile Dokument mit der Lösung, die validiert werden soll.
	 * @return true, falls die eingelesene Lösung korrekt ist
	 */
	@Override
	public boolean validateSolution(String xmlFile) {
		UserReadInputWriteOutputAAS userReadWriteAAS = new UserReadInputWriteOutputAAS(xmlFile);
		
		try {
			IRoom room = userReadWriteAAS.readInput();
			UserValidateAAS userValidateAAS = new UserValidateAAS();
			boolean isIlluminated = userValidateAAS.validate(room);
		} catch (UserReadInputWriteOutputException e) {
			// TODO Fehlermeldung auf Konsole ausgeben?
			e.printStackTrace();
			return false;
		} catch (UserValidateAASException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		// TODO Logik implementieren
		return false;
	}

	/**
	 * Ermittelt eine Lösung zu den eingegebenen Daten
	 * @param xmlFile Dokument, das die zu lösende Probleminstanz enthält
	 * @param timeLimit Zeitlimit in Sekunden
	 * @return Anzahl der Lampen der ermittelten Lösung
	 */
	@Override
	public int solve(String xmlFile, int timeLimit) {
		// TODO Logik implementieren
		return 0;
	}

}
