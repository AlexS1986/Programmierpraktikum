package fernuni.propra.algorithm.runtime_information;

import static org.junit.Assert.*;

import org.junit.Before;
import org.junit.Test;

public class RuntimeInformationTest {
	private RuntimeInformation rti1,rti2,rti3;

	@Before
	public void setUp() throws Exception {
		rti1 = new RuntimeInformation();
		rti2 = new RuntimeInformation();
		rti3 = new RuntimeInformation();
	}

	@Test
	public void testStartTimeCandidateSearch() {
		
		long runtime = 0;
		try {
			rti1.startTimeCandidateSearch();
			rti1.stopTimeCandidateSearch();
			runtime = rti1.getElapsedTimeCandidateSearch();
		} catch (RuntimeExceptionLamps e) {
		}
		
		
		//Assert
		assertTrue("",runtime>0);
	}

	@Test
	public void testStopTimeCandidateSearch() {
		fail("Not yet implemented");
	}

	@Test
	public void testGetElapsedTimeCandidateSearch() {
		fail("Not yet implemented");
	}

	@Test
	public void testStartTimeOriginalPartialRectanglesFind() {
		fail("Not yet implemented");
	}

	@Test
	public void testStopTimeOriginalPartialRectanglesFind() {
		fail("Not yet implemented");
	}

	@Test
	public void testGetElapsedTimeOriginalPartialRectanglesFind() {
		fail("Not yet implemented");
	}

	@Test
	public void testStartTimeOptimizePositions() {
		fail("Not yet implemented");
	}

	@Test
	public void testStopTimeOptimizePositions() {
		fail("Not yet implemented");
	}

	@Test
	public void testGetElapsedTimeOptimizePositions() {
		fail("Not yet implemented");
	}

	@Test
	public void testStartTimeIlluminationTest() {
		fail("Not yet implemented");
	}

	@Test
	public void testStopTimeIlluminationTest() {
		fail("Not yet implemented");
	}

	@Test
	public void testGetElapsedTimeIlluminationTest() {
		fail("Not yet implemented");
	}

	@Test
	public void testStartTime() {
		fail("Not yet implemented");
	}

	@Test
	public void testStopTime() {
		fail("Not yet implemented");
	}

	@Test
	public void testGetElapsedTime() {
		fail("Not yet implemented");
	}

	@Test
	public void testToString() {
		fail("Not yet implemented");
	}

}
