package fernuni.propra.internal_data_model;

/**
 * A class that represents walls of
 *  an {@link IRoom} and supports
 * special functionality that is 
 * needed within the algorithm.
 * <p>
 * {@link Wall}s can be tagged. This is 
 * typically done to subsequently tag
 * {@link Lamp}s with the same tag, as if
 * to show that if this {@link Lamp} is turned
 * on, then {@link Wall} with the same tag
 * is also illuminated.
 * <p>
 * A {@link Wall} can also provide information
 * on whether it is a north, west, south or 
 * east {@link Wall}.
 * <p>
 * Extended classes: {@link LineSegment}
 * <p>
 * @author alex
 *
 */
public class Wall extends LineSegment{
	private int tag;
	
	/**
	 * 
	 * @param p1
	 * @param p2
	 * @param tag
	 */
	public Wall(Point p1, Point p2, int tag) {
		super(p1, p2);
		this.tag = tag;
	}
	
	public Wall(LineSegment lineSegment, int tag) {
		super(lineSegment.getP1(), lineSegment.getP2());
		this.tag = tag;
	}
	
	public boolean isNorthWall() {
		return isHorizontal() && getP1().largerX(getP2());
	}
	
	public boolean isWestWall() {
		return isVertical() && getP1().largerY(getP2());
	}
	
	public boolean isSouthWall() {
		return isHorizontal() && getP2().largerX(getP1());
	}
	
	public boolean isEastWall() {
		return isVertical() && getP2().largerY(getP1());
	}
	
	public int getTag() {
		return tag;
	}

	
	
}
