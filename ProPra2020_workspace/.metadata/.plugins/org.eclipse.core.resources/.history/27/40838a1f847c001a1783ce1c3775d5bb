package fernuni.propra.file_processing;

import fernuni.propra.internal_data_model.IRoom;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;

import org.jdom2.DocType;
import org.jdom2.Document;
import org.jdom2.Element;
import org.jdom2.JDOMException;
import org.jdom2.JDOMFactory;
import org.jdom2.input.SAXBuilder;
import org.jdom2.input.sax.XMLReaders;
import org.jdom2.output.Format;
import org.jdom2.output.XMLOutputter;

public class FilePersistence extends PersistenceAbstract {
    private static final String DTD = System.getProperty("user.dir")+"/../File_Processing_Component/Model/DataModel.dtd";
	//private static String docType =
    // 	       "<!DOCTYPE root ["
    // 	          + " <!ELEMENT root (child) > "
    // 	          + " <!ELEMENT child EMPTY > "
    //	          + " ]> ";
	
	//private final String docType = "<!DOCTYPE Raum SYSTEM "DataModel.dtd">"
	
    
    
	@Override
	public IRoom readInput(String xmlFilePath) {
		SAXBuilder builder = new SAXBuilder();
		
		
		File xmlFile = new File(xmlFilePath);
		boolean test = xmlFile.exists();
		boolean isFile = xmlFile.isFile();
		
		
		if (test) {
			System.out.println("hi!");
			
		}
		
		Document document = null;
		try {
			document = (Document) builder.build(xmlFile);
			String folder = System.getProperty("user.dir")+"/../File_Processing_Component/Model/";
			System.out.println(readDTDFile());
			if (document.getDocType() == null) {
				System.out.println("kein doctype vorhanden");
				
				DocType dt = new DocType("Raum", folder+"DataModel.dtd");
				
				document.setDocType(dt);
				
		        XMLOutputter xmlOutputter = new XMLOutputter(Format.getPrettyFormat());
		        //output xml to console for debugging
		        //xmlOutputter.output(doc, System.out);
		        File outfile = new File("~/Desktop/test");
		        xmlOutputter.output(document, new FileOutputStream("/Users/alex/Desktop/test"));
			}
			
			Element rootNode = document.getRootElement();
			System.out.println(rootNode.toString());
			
		} catch (JDOMException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void writeOutput(IRoom room, String xmlFile) {
		// TODO Auto-generated method stub

	}
	
	private String readDTDFile() throws IOException{
		File dtdFile = new File(FilePersistence.DTD);
		BufferedReader br = new BufferedReader(new FileReader(dtdFile));
		
		StringBuilder sb = new StringBuilder();
		
		String line = br.readLine();
		while ((line = br.readLine())!= null)  {
			sb.append(line);
			sb.append(System.getProperty("line.separator"));
		}
		br.close();
		return sb.toString();
	}

}
