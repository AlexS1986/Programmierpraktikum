package fernuni.propra.algorithm;


import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.Timer;

import fernuni.propra.internal_data_model.IRoom;

public class UserSolveAAS {
	//private SolveK solveControl = new SolveK();
	
	public void solve(IRoom room, int time) throws UserSolveAASException {
		
		IRuntimeInformation runTimeInformation = new RuntimeInformation();
		SolveK solveControl = new SolveK(room, runTimeInformation);
		
		solveControl.start();
		

		
		
		Timer timer = new Timer(time * 1000, new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				solveControl.interrupt();
				
			}
		});
		
		timer.start();
		
		synchronized (solveControl) {
			while(solveControl.getComputationFinished()) {
				try {
					wait();
				} catch (InterruptedException e1) {
					throw new UserSolveAASException(e1);
				}
			}
		}
		
		//try {
			//Timer timer = new Timer(time, solveControl);
		//	solveControl.solve(runtimeInformation, room);
		//} catch (CandidateSearcherException e) {
		//	throw new UserSolveAASException(e.getMessage());
		//}
	}

}
