package fernuni.propra.algorithm.util;

import java.util.HashSet;
import java.util.Iterator;
import java.util.List;

import fernuni.propra.internal_data_model.Point;

public class RectangleWithTag extends Rectangle{

	HashSet<Integer> tags = new HashSet<Integer>();
	
	public RectangleWithTag(Point p1, Point p2, List<Integer> initialTags) {
		super(p1,p2);
		for (Integer tag : initialTags) {
			tags.add(tag);
		}
	}
	
	public RectangleWithTag(Rectangle rectangle, List<Integer> initialTags) {
		super(rectangle.getP1(),rectangle.getP3());
		for (Integer tag : initialTags) {
			tags.add(tag);
		}
	}
	
	public boolean containsTag(Integer tag) {
		return tags.contains(tag);
	}

	public void addTag(Integer tag) {
		tags.add(tag);
	}
	
	public Iterator<Integer> getTagIterator() {
		return tags.iterator();
	}
	
	public boolean tagsAreSubsetOfTagsOfOtherRectangle(Rectangle )
	
}
