package fernuni.propra.algorithm;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;

import fernuni.propra.algorithm.util.RectangleWithTag;

public class CandidateSearcher2 extends CandidateSearcher{

	public CandidateSearcher2() {
		super();
	}
	
	@Override
	List<RectangleWithTag> reduceRectangles(ArrayList<RectangleWithTag> originalRectangles) {
		// pre originalRectangles != null && originalRectangles.size()>0
		if (originalRectangles == null || originalRectangles.size() == 0) throw new IllegalArgumentException("No original rectangles provided");
		LinkedList<RectangleWithTag> outRectangles = new LinkedList<RectangleWithTag>();
		//boolean combinationOccured = false;
		for (int i = 0; i< originalRectangles.size(); i++) {
			boolean combinationOccured = false;
			Iterator<RectangleWithTag> combinedRectanglesIterator = outRectangles.iterator();
			do {
				
			} while(false);
		}

		
		
		return originalRectangles;
		
	}

}
