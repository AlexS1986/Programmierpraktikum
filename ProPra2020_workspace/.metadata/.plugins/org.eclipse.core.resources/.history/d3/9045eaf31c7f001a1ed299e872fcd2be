package fernuni.propra.algorithm.util;

import static org.junit.Assert.*;

import org.junit.Before;
import org.junit.Test;

import fernuni.propra.internal_data_model.Point;

public class RectangleTest {
	Point p1,p2,p3,p4;
	Rectangle rec;
	
	@Before
	public void setUp() {
		//Arrange
		p1 = new Point(0,0);
		p2 = new Point(1,0);
		p3 = new Point(1,1);
		p4 = new Point(0,1);
		rec = new Rectangle(p1, p3);
	}

	@Test
	public void testOverlap() {
		//Arrange
		Point p5 = new Point(0.5,0.5);
		Point p6 = new Point(1.5,0.5);
		Point p7 = new Point(1.5,1.5);
		Point p8 = new Point(0.5,1.5);
		
		Rectangle rec2 = new Rectangle(p5, p7);
		Rectangle rec3 = new Rectangle(p5, p3);
		Rectangle rec5 = new Rectangle(p3, p7);
		
		//Act
		Rectangle rec4 = rec.overlap(rec2);
		Rectangle rec6 = rec.overlap(rec5);
		
		assertTrue(rec3.isEqual(rec4));
		assertTrue()
		
	}

	@Test
	public void testGetCenter() {
		
		//Act
		Point result = rec.getCenter();
		
		//Assert
		assertTrue(result.isEqual(new Point(0.5, 0.5)));
		
	}

	@Test
	public void testIsEqual() {
		//Arrange
		Point p5 = new Point(2,0);
		Point p6 = new Point(2,2);
		Rectangle rec2 = new Rectangle(p1, p6);
		
		//Act
		boolean test1 = rec.isEqual(rec);
		boolean test2 = rec.isEqual(rec2);
		
		//Assert
		assertTrue(test1);
		assertFalse(test2);
		
	}

	@Test
	public void testIsCounterClockWise() {
		//Arrange
		Rectangle rec2 = new Rectangle(p1, p1);
		
		//Act
		boolean test1 = rec2.isCounterClockWise();
		boolean test2 = rec.isCounterClockWise();
		
		//Assert
		assertFalse(test1);
		assertTrue(test2);
	}

}
