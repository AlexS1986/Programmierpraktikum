package fernuni.propra.algorithm;


/**
 * Specifies an interface for the construction of parts of an algorithm defined by consistent
 * instances of {@link ICandidateSearcher}, {@link IPositionOptimizer} and {@link IIlluminationTester}.
 * <p>
 * Implements the abstract factory design pattern. Subclasses, i.e. concrete factories must implement this interface.
 * @author alex
 *
 */
public abstract class AbstractAlgorithmFactory {
	
	private AbstractAlgorithmFactory() {};
	
	public static AbstractAlgorithmFactory getAlgorithmFactory() {
		
	}
	
	public abstract ICandidateSearcher createCandidateSearcher();
	public abstract IPositionOptimizer createPositionOptimizer();
	public abstract IIlluminationTester createIlluminiationTester();

}
